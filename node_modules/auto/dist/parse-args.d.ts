import { Command, Option } from "command-line-application";
import { ApiOptions, GlobalOptions, ICanaryOptions, IChangelogOptions, ICommentOptions, ICreateLabelsOptions, ILabelOptions, IPRBodyOptions, IPRCheckOptions, IPRStatusOptions, IReleaseOptions, IShipItOptions, IVersionOptions } from "@auto-it/core";
export declare type Flags = keyof GlobalOptions | keyof ICreateLabelsOptions | keyof ILabelOptions | keyof IPRCheckOptions | keyof IPRStatusOptions | keyof ICommentOptions | keyof IPRBodyOptions | keyof IReleaseOptions | keyof IVersionOptions | keyof IShipItOptions | keyof IChangelogOptions | keyof ICanaryOptions;
interface AutoOption extends Option {
    /** This option is configurable via .autorc */
    config?: boolean;
}
interface AutoCommand extends Command {
    /** Options for the command */
    options?: AutoOption[];
}
export declare const commands: AutoCommand[];
/** Parse the CLI args and return command + options provided. */
export default function parseArgs(testArgs?: string[]): never[] | [string, ApiOptions];
export {};
//# sourceMappingURL=parse-args.d.ts.map