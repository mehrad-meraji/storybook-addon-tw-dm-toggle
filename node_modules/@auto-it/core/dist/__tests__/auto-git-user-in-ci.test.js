"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const auto_1 = require("../auto");
const exec_promise_1 = tslib_1.__importDefault(require("../utils/exec-promise"));
const exec = jest.fn();
jest.mock("../utils/exec-promise");
// @ts-ignore
exec_promise_1.default.mockImplementation(exec);
exec.mockImplementation(() => {
    throw new Error();
});
jest.mock("env-ci", () => () => ({
    isCi: true,
}));
const defaults = {
    owner: "foo",
    repo: "bar",
};
test("parses string author in config", async () => {
    const auto = new auto_1.Auto(Object.assign(Object.assign({}, defaults), { plugins: [] }));
    // @ts-ignore
    auto.config = { author: "Andrew <andrew@mail.com>" };
    // @ts-ignore
    expect(await auto.getGitUser()).toStrictEqual({
        name: "Andrew",
        email: "andrew@mail.com",
    });
});
test("parses object author in config", async () => {
    const auto = new auto_1.Auto(Object.assign(Object.assign({}, defaults), { plugins: [] }));
    const author = {
        name: "Andrew",
        email: "andrew@mail.com",
    };
    // @ts-ignore
    auto.config = { author };
    // @ts-ignore
    expect(await auto.getGitUser()).toStrictEqual(author);
});
//# sourceMappingURL=auto-git-user-in-ci.test.js.map