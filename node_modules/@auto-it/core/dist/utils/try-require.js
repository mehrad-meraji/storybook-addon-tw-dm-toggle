"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const import_cwd_1 = tslib_1.__importDefault(require("import-cwd"));
const requireg_1 = tslib_1.__importDefault(require("requireg"));
const import_from_1 = tslib_1.__importDefault(require("import-from"));
const logger_1 = tslib_1.__importDefault(require("./logger"));
const logger = logger_1.default();
/** Try to require something either from the CWD or the regular way */
function tryRequire(tryPath, from) {
    try {
        // Require from CWD
        return import_cwd_1.default(tryPath);
    }
    catch (error) {
        // if we try to actually require npm we will import something that is the actual npm API
        // not the plugin that we want
        if (tryPath === "npm") {
            return;
        }
        // If a plugin has any errors we want to inform the user
        if (error.code !== "MODULE_NOT_FOUND") {
            throw error;
        }
        try {
            // Require from __dirname and then common global package places. Needed for npx and global installs
            return requireg_1.default(tryPath);
        }
        catch (error) {
            logger.veryVerbose.warn(error.message);
        }
        if (from) {
            try {
                // For loading plugins specified in a configuration (yarn 2)
                return import_from_1.default(from, tryPath);
            }
            catch (error) {
                logger.veryVerbose.warn({ from, tryPath, error });
            }
        }
    }
}
exports.default = tryRequire;
//# sourceMappingURL=try-require.js.map