"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCurrentBranch = void 0;
const tslib_1 = require("tslib");
const env_ci_1 = tslib_1.__importDefault(require("env-ci"));
const child_process_1 = require("child_process");
const defaultCiEnvironment = env_ci_1.default();
/**
 * Validates that the given branch name should be returned by environment context
 */
const isValidBranch = (branch) => typeof branch === "string" && branch !== "undefined";
/** Get the current branch the git repo is set to */
function getCurrentBranch(env = defaultCiEnvironment) {
    const isPR = "isPr" in env && env.isPr;
    let branch;
    // env-ci sets branch to target branch (ex: main) in some CI services.
    // so we should make sure we aren't in a PR just to be safe
    if (isPR && "prBranch" in env && isValidBranch(env.prBranch)) {
        branch = env.prBranch;
    }
    else if (isValidBranch(env.branch)) {
        branch = env.branch;
    }
    if (!branch) {
        try {
            branch = child_process_1.execSync("git symbolic-ref --short HEAD", {
                encoding: "utf8",
                stdio: "ignore",
            });
        }
        catch (error) { }
    }
    return branch;
}
exports.getCurrentBranch = getCurrentBranch;
//# sourceMappingURL=get-current-branch.js.map