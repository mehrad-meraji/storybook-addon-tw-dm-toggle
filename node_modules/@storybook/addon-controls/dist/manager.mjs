import { ADDON_ID, PARAM_KEY } from './chunk-I36WBKUI.mjs';
import React2 from 'react';
import { addons, types, useArgs, useGlobals, useArgTypes, useParameter, useStorybookState } from '@storybook/manager-api';
import { AddonPanel } from '@storybook/components';
import { NoControlsWarning, PureArgsTable } from '@storybook/blocks';

var ControlsPanel=()=>{let[args,updateArgs,resetArgs]=useArgs(),[globals]=useGlobals(),rows=useArgTypes(),isArgsStory=useParameter("__isArgsStory",!1),{expanded,sort,presetColors,hideNoControlsWarning=!1}=useParameter(PARAM_KEY,{}),{path}=useStorybookState(),hasControls=Object.values(rows).some(arg=>arg?.control),showWarning=!(hasControls&&isArgsStory)&&!hideNoControlsWarning,withPresetColors=Object.entries(rows).reduce((acc,[key,arg])=>(arg?.control?.type!=="color"||arg?.control?.presetColors?acc[key]=arg:acc[key]={...arg,control:{...arg.control,presetColors}},acc),{});return React2.createElement(React2.Fragment,null,showWarning&&React2.createElement(NoControlsWarning,null),React2.createElement(PureArgsTable,{key:path,compact:!expanded&&hasControls,rows:withPresetColors,args,globals,updateArgs,resetArgs,inAddonPanel:!0,sort}))};function Title(){let rows=useArgTypes(),controlsCount=Object.values(rows).filter(argType=>argType?.control&&!argType?.table?.disable).length,suffix=controlsCount===0?"":` (${controlsCount})`;return React2.createElement(React2.Fragment,null,"Controls",suffix)}addons.register(ADDON_ID,api=>{addons.addPanel(ADDON_ID,{title:React2.createElement(Title,null),id:"controls",type:types.PANEL,paramKey:PARAM_KEY,render:({key,active})=>!active||!api.getCurrentStoryData()?null:React2.createElement(AddonPanel,{key,active},React2.createElement(ControlsPanel,null))});});
